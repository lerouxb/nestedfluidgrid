/* reset */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; }
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section { display: block; }
body { line-height: 1; }
ol, ul { list-style: none; }
blockquote, q { quotes: none; }
blockquote:before, blockquote:after,
q:before, q:after { content: ''; content: none; }
table { border-collapse: collapse; border-spacing: 0; }


html {background-color: #fff; color: #333; text-rendering: optimizeLegibility;}
body {padding: 2em; font-family: Palatino, georgia, serif; font-size: 16px; line-height: 1.4;}

b {font-weight: bold}
i {font-style: italic;}

a,
a:visited {color: blue;}

form {margin: -2em; margin-bottom: 2em; background-color: #f2f2f2; padding: 1em;}
form {text-align: center;}
label, input, .help {font-size: 12px; font-family: "helvetica neue", sans-serif;}

/* the top-level .col */
#grid {margin: 0 auto; float: none;}

.help {text-align: center; margin-bottom: 2em; color: #666;}


textarea {font-family: monospace; font-size: 12px; width: 100%; height: 200px;
box-sizing: border-box;
-webkit-box-sizing: border-box;
-moz-box-sizing: border-box;
margin-bottom: 1.5em;

border-color: #ccc;
}


/*
In THEORY we could calculate the vertical margins as percentages for every
block tag as a direct decendant for every possible column-span amount, but that
requires that we know what the ratio would be for every block tag and you're not
likely to use the same vertical spacing for every heading and every block tag.
Paragraphs, widgets, block-level images, etc maybe, but not everything. So
maybe it is better to just leave vertical spacing out of it? That sort of thing
could still be done with media queries, javascript or ems combined with
changing the font size. But fiddling with the font size would probably be a bit
dangerous in a generic CMS theme. (Except maybe if you're using % based fonts?)
*/
p {margin-bottom: 1.5em;} /* and all other block tags  */

/* images and linked images behave like block tags */
.cell > a.img,
.cell > img {display: block; margin-bottom: 1.5em;}


/*
Display the best- and worst-case scenarious for column and gap widths so you
can come up with sanely sized images. (make sure you have their widths at the
widest for the column-span you'll be using and that details can still be made
out at the worst-case scenario)
Below the minimum width you would probably just start to collapse columns using
media queries or JavaScript-added classes.
*/
#debug {background-color: #eee; padding: 1em;}
#debug table {font-size: 14px; width: 100%;}
th, td {padding: 0.5em; text-align: right;}
th:first-child, td:first-child {text-align: left; padding-right: 1.5em;}
th {font-weight: bold;}
td {border-top: 1px solid #ddd;}

/*
Clearfix for rows. Note that rows and columns don't do anything with vertical
spacing.
*/
.row:before,
.row:after {content: '\0020'; display: block; overflow: hidden; visibility: hidden; width: 0; height: 0;}
.row:after {clear: both;}
.row {zoom: 1;}

/*
You could probably help older browsers that don't support first-child and
last-child along by adding .first-cell and .last-cell classes using JavaScript.
(Or if you're crazy you could hard-code them or add them to the content when
you build the HTML.)
*/
.cell {float: left;}
div.cell:first-child,
div.first-cell {margin-left: 0;}
div.cell:last-child,
div.last-cell {margin-right: 0;}

.row {margin-bottom: 1.5em;}
.cell > *:last-child,
.widget > *:last-child {margin-bottom: 0;}

/*
Smoothly resize images. Some browsers might perform better (read: actually do
what you ask) if you have some JavaScript to REMOVE the width and height
attributes from img tags.
*/
img {max-width: 100%; height: auto;}

